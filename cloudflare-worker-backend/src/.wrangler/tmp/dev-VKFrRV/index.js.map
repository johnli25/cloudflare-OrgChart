{
  "version": 3,
  "sources": ["../bundle-gxDqRj/checked-fetch.js", "../../../../../../../AppData/Roaming/npm/node_modules/wrangler/templates/middleware/common.ts", "../../../../../../../AppData/Roaming/npm/node_modules/wrangler/templates/middleware/loader-sw.ts", "../../../../../../../AppData/Roaming/npm/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-gxDqRj/middleware-insertion-facade.js", "../../../index.js"],
  "sourceRoot": "C:\\Users\\johnwl2\\Desktop\\cloudflare-assessment\\cloudflare-worker-backend\\src\\.wrangler\\tmp\\dev-VKFrRV",
  "sourcesContent": ["const urls = new Set();\n\nfunction checkURL(request, init) {\n\tconst url =\n\t\trequest instanceof URL\n\t\t\t? request\n\t\t\t: new URL(\n\t\t\t\t\t(typeof request === \"string\"\n\t\t\t\t\t\t? new Request(request, init)\n\t\t\t\t\t\t: request\n\t\t\t\t\t).url\n\t\t\t  );\n\tif (url.port && url.port !== \"443\" && url.protocol === \"https:\") {\n\t\tif (!urls.has(url.toString())) {\n\t\t\turls.add(url.toString());\n\t\t\tconsole.warn(\n\t\t\t\t`WARNING: known issue with \\`fetch()\\` requests to custom HTTPS ports in published Workers:\\n` +\n\t\t\t\t\t` - ${url.toString()} - the custom port will be ignored when the Worker is published using the \\`wrangler deploy\\` command.\\n`\n\t\t\t);\n\t\t}\n\t}\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\tconst [request, init] = argArray;\n\t\tcheckURL(request, init);\n\t\treturn Reflect.apply(target, thisArg, argArray);\n\t},\n});\n", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "import {\n\tAwaitable,\n\tDispatcher,\n\tIncomingRequest,\n\tMiddleware,\n\t__facade_invoke__,\n\t__facade_register__,\n\t__facade_registerInternal__,\n} from \"./common\";\nexport { __facade_register__, __facade_registerInternal__ };\n\n// Miniflare 2's `EventTarget` follows the spec and doesn't allow exceptions to\n// be caught by `dispatchEvent`. Instead it has a custom `ThrowingEventTarget`\n// class that rethrows errors from event listeners in `dispatchEvent`.\n// We'd like errors to be propagated to the top-level `addEventListener`, so\n// we'd like to use `ThrowingEventTarget`. Unfortunately, `ThrowingEventTarget`\n// isn't exposed on the global scope, but `WorkerGlobalScope` (which extends\n// `ThrowingEventTarget`) is. Therefore, we get at it in this nasty way.\nlet __FACADE_EVENT_TARGET__: EventTarget;\nif ((globalThis as any).MINIFLARE) {\n\t__FACADE_EVENT_TARGET__ = new (Object.getPrototypeOf(WorkerGlobalScope))();\n} else {\n\t__FACADE_EVENT_TARGET__ = new EventTarget();\n}\n\nfunction __facade_isSpecialEvent__(\n\ttype: string\n): type is \"fetch\" | \"scheduled\" {\n\treturn type === \"fetch\" || type === \"scheduled\";\n}\nconst __facade__originalAddEventListener__ = globalThis.addEventListener;\nconst __facade__originalRemoveEventListener__ = globalThis.removeEventListener;\nconst __facade__originalDispatchEvent__ = globalThis.dispatchEvent;\n\nglobalThis.addEventListener = function (type, listener, options) {\n\tif (__facade_isSpecialEvent__(type)) {\n\t\t__FACADE_EVENT_TARGET__.addEventListener(\n\t\t\ttype,\n\t\t\tlistener as EventListenerOrEventListenerObject,\n\t\t\toptions\n\t\t);\n\t} else {\n\t\t__facade__originalAddEventListener__(type, listener, options);\n\t}\n};\nglobalThis.removeEventListener = function (type, listener, options) {\n\tif (__facade_isSpecialEvent__(type)) {\n\t\t__FACADE_EVENT_TARGET__.removeEventListener(\n\t\t\ttype,\n\t\t\tlistener as EventListenerOrEventListenerObject,\n\t\t\toptions\n\t\t);\n\t} else {\n\t\t__facade__originalRemoveEventListener__(type, listener, options);\n\t}\n};\nglobalThis.dispatchEvent = function (event) {\n\tif (__facade_isSpecialEvent__(event.type)) {\n\t\treturn __FACADE_EVENT_TARGET__.dispatchEvent(event);\n\t} else {\n\t\treturn __facade__originalDispatchEvent__(event);\n\t}\n};\n\ndeclare global {\n\tvar addMiddleware: typeof __facade_register__;\n\tvar addMiddlewareInternal: typeof __facade_registerInternal__;\n}\nglobalThis.addMiddleware = __facade_register__;\nglobalThis.addMiddlewareInternal = __facade_registerInternal__;\n\nconst __facade_waitUntil__ = Symbol(\"__facade_waitUntil__\");\nconst __facade_response__ = Symbol(\"__facade_response__\");\nconst __facade_dispatched__ = Symbol(\"__facade_dispatched__\");\n\nclass __Facade_ExtendableEvent__ extends Event {\n\t[__facade_waitUntil__]: Awaitable<unknown>[] = [];\n\n\twaitUntil(promise: Awaitable<any>) {\n\t\tif (!(this instanceof __Facade_ExtendableEvent__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\tthis[__facade_waitUntil__].push(promise);\n\t}\n}\n\ninterface FetchEventInit extends EventInit {\n\trequest: Request;\n\tpassThroughOnException: FetchEvent[\"passThroughOnException\"];\n}\n\nclass __Facade_FetchEvent__ extends __Facade_ExtendableEvent__ {\n\t#request: Request;\n\t#passThroughOnException: FetchEvent[\"passThroughOnException\"];\n\t[__facade_response__]?: Awaitable<Response>;\n\t[__facade_dispatched__] = false;\n\n\tconstructor(type: \"fetch\", init: FetchEventInit) {\n\t\tsuper(type);\n\t\tthis.#request = init.request;\n\t\tthis.#passThroughOnException = init.passThroughOnException;\n\t}\n\n\tget request() {\n\t\treturn this.#request;\n\t}\n\n\trespondWith(response: Awaitable<Response>) {\n\t\tif (!(this instanceof __Facade_FetchEvent__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\tif (this[__facade_response__] !== undefined) {\n\t\t\tthrow new DOMException(\n\t\t\t\t\"FetchEvent.respondWith() has already been called; it can only be called once.\",\n\t\t\t\t\"InvalidStateError\"\n\t\t\t);\n\t\t}\n\t\tif (this[__facade_dispatched__]) {\n\t\t\tthrow new DOMException(\n\t\t\t\t\"Too late to call FetchEvent.respondWith(). It must be called synchronously in the event handler.\",\n\t\t\t\t\"InvalidStateError\"\n\t\t\t);\n\t\t}\n\t\tthis.stopImmediatePropagation();\n\t\tthis[__facade_response__] = response;\n\t}\n\n\tpassThroughOnException() {\n\t\tif (!(this instanceof __Facade_FetchEvent__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#passThroughOnException();\n\t}\n}\n\ninterface ScheduledEventInit extends EventInit {\n\tscheduledTime: number;\n\tcron: string;\n\tnoRetry: ScheduledEvent[\"noRetry\"];\n}\n\nclass __Facade_ScheduledEvent__ extends __Facade_ExtendableEvent__ {\n\t#scheduledTime: number;\n\t#cron: string;\n\t#noRetry: ScheduledEvent[\"noRetry\"];\n\n\tconstructor(type: \"scheduled\", init: ScheduledEventInit) {\n\t\tsuper(type);\n\t\tthis.#scheduledTime = init.scheduledTime;\n\t\tthis.#cron = init.cron;\n\t\tthis.#noRetry = init.noRetry;\n\t}\n\n\tget scheduledTime() {\n\t\treturn this.#scheduledTime;\n\t}\n\n\tget cron() {\n\t\treturn this.#cron;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledEvent__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\n__facade__originalAddEventListener__(\"fetch\", (event) => {\n\tconst ctx: ExecutionContext = {\n\t\twaitUntil: event.waitUntil.bind(event),\n\t\tpassThroughOnException: event.passThroughOnException.bind(event),\n\t};\n\n\tconst __facade_sw_dispatch__: Dispatcher = function (type, init) {\n\t\tif (type === \"scheduled\") {\n\t\t\tconst facadeEvent = new __Facade_ScheduledEvent__(\"scheduled\", {\n\t\t\t\tscheduledTime: Date.now(),\n\t\t\t\tcron: init.cron ?? \"\",\n\t\t\t\tnoRetry() {},\n\t\t\t});\n\n\t\t\t__FACADE_EVENT_TARGET__.dispatchEvent(facadeEvent);\n\t\t\tevent.waitUntil(Promise.all(facadeEvent[__facade_waitUntil__]));\n\t\t}\n\t};\n\n\tconst __facade_sw_fetch__: Middleware = function (request, _env, ctx) {\n\t\tconst facadeEvent = new __Facade_FetchEvent__(\"fetch\", {\n\t\t\trequest,\n\t\t\tpassThroughOnException: ctx.passThroughOnException,\n\t\t});\n\n\t\t__FACADE_EVENT_TARGET__.dispatchEvent(facadeEvent);\n\t\tfacadeEvent[__facade_dispatched__] = true;\n\t\tevent.waitUntil(Promise.all(facadeEvent[__facade_waitUntil__]));\n\n\t\tconst response = facadeEvent[__facade_response__];\n\t\tif (response === undefined) {\n\t\t\tthrow new Error(\"No response!\"); // TODO: proper error message\n\t\t}\n\t\treturn response;\n\t};\n\n\tevent.respondWith(\n\t\t__facade_invoke__(\n\t\t\tevent.request as IncomingRequest,\n\t\t\tglobalThis,\n\t\t\tctx,\n\t\t\t__facade_sw_dispatch__,\n\t\t\t__facade_sw_fetch__\n\t\t)\n\t);\n});\n\n__facade__originalAddEventListener__(\"scheduled\", (event) => {\n\tconst facadeEvent = new __Facade_ScheduledEvent__(\"scheduled\", {\n\t\tscheduledTime: event.scheduledTime,\n\t\tcron: event.cron,\n\t\tnoRetry: event.noRetry.bind(event),\n\t});\n\n\t__FACADE_EVENT_TARGET__.dispatchEvent(facadeEvent);\n\tevent.waitUntil(Promise.all(facadeEvent[__facade_waitUntil__]));\n});\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\nexport const wrap = undefined;\n", "import { __facade_registerInternal__ } from \"C:\\\\Users\\\\johnwl2\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\loader-sw.ts\";\nimport * as __MIDDLEWARE_0__ from \"C:\\\\Users\\\\johnwl2\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-miniflare3-json-error.ts\";\n__facade_registerInternal__([__MIDDLEWARE_0__.default])", "\r\nconst testCSVData = `name,department,salary,office,isManager,skill1,skill2,skill3\r\nJohn,CDN,80,Lisbon,FALSE,Caching,C++,AI\r\nJill,Developer Platform,100,Austin,FALSE,Typescript,C++,GoLang\r\nAudrey Leblanc,Accounting,154,Singapore,TRUE,HTML,CSS,Postgres\r\nBraden McMahon,Bots,219,San Francisco,TRUE,Distributed Systems,Rust,AI\r\nBelen Norman,Developer Platform,252,London,TRUE,HTML,Rust,GoLang\r\nAziel Gibson,CDN,145,New York,TRUE,Caching,C++,AI\r\nEden Roy,Accounting,190,Austin,FALSE,Typescript,C++,GoLang\r\nMarcelo Sullivan,Bots,241,Singapore,FALSE,HTML,CSS,Postgres\r\nMelanie Esparza,Developer Platform,231,San Francisco,FALSE,Distributed Systems,Rust,AI\r\nCarl Nava,CDN,230,London,FALSE,HTML,Rust,GoLang\r\nScout Hansen,Accounting,259,New York,FALSE,Caching,C++,AI\r\nCharlie West,Bots,131,Lisbon,FALSE,Typescript,C++,GoLang\r\nRemi Hendrix,Developer Platform,162,Austin,FALSE,HTML,CSS,Postgres\r\nKorbyn Cuevas,CDN,86,Singapore,FALSE,Distributed Systems,Rust,AI\r\nAdele Castillo,Accounting,237,San Francisco,FALSE,HTML,Rust,GoLang\r\nKai Rojas,Bots,102,London,FALSE,Caching,C++,AI\r\nAdaline Murphy,Developer Platform,238,New York,FALSE,Typescript,C++,GoLang\r\nCameron Doyle,CDN,81,Lisbon,FALSE,HTML,CSS,Postgres\r\nAnnalise Fuller,Accounting,172,Austin,FALSE,Distributed Systems,Rust,AI\r\nAndre Spears,Bots,106,Singapore,FALSE,HTML,Performance,GoLang\r\nIsabela Casey,Developer Platform,283,San Francisco,FALSE,Caching,C++,AI\r\nArmando Trujillo,CDN,178,London,FALSE,Typescript,CSS,GoLang\r\nDanielle Adkins,Accounting,89,New York,FALSE,HTML,Rust,Postgres\r\nKylo Hayes,Bots,213,London,FALSE,Distributed Systems,Performance,AI\r\nIris Frye,Developer Platform,212,New York,FALSE,HTML,C++,GoLang\r\nFranco Short,CDN,82,Lisbon,FALSE,Caching,CSS,AI\r\nCheyenne Fowler,Accounting,150,Austin,FALSE,Typescript,Rust,GoLang\r\nKameron Colon,Bots,149,Singapore,FALSE,HTML,Performance,Postgres\r\nRemy Wang,Developer Platform,94,San Francisco,FALSE,Distributed Systems,C++,AI\r\nCohen Dougherty,CDN,157,London,FALSE,HTML,CSS,GoLang\r\nAlisson Russell,Accounting,214,New York,FALSE,Caching,Rust,AI\r\nWeston McIntosh,Bots,130,Lisbon,FALSE,Typescript,Performance,GoLang\r\nGwen Gutierrez,Developer Platform,259,Austin,FALSE,HTML,C++,Postgres\r\nLuca Acosta,CDN,175,Singapore,FALSE,Distributed Systems,CSS,AI\r\nKaia Wyatt,Accounting,112,San Francisco,FALSE,HTML,Rust,GoLang\r\nSam Hubbard,Bots,87,London,FALSE,Caching,Performance,AI\r\nRosie Hull,Developer Platform,227,New York,FALSE,Typescript,C++,GoLang\r\nSalem Foley,CDN,290,London,FALSE,HTML,CSS,Postgres\r\nZaylee Blair,Accounting,136,New York,FALSE,Distributed Systems,Rust,AI\r\nTroy Bartlett,Bots,103,Lisbon,FALSE,HTML,Performance,GoLang\r\nAubrielle Collier,Developer Platform,225,Austin,FALSE,Distributed Systems,C++,AI\r\nEdison Hamilton,CDN,267,Singapore,FALSE,HTML,CSS,GoLang\r\nMackenzie Gill,Accounting,101,San Francisco,FALSE,Caching,Rust,Postgres\r\nMatthias Greene,Bots,288,London,FALSE,Typescript,Performance,AI\r\nSelena Hutchinson,Developer Platform,263,New York,FALSE,HTML,C++,GoLang\r\nKorbin Francis,CDN,108,Lisbon,FALSE,Distributed Systems,Rust,AI\r\nDaniella Noble,Accounting,289,Austin,FALSE,HTML,Performance,GoLang\r\nIdris Kent,Bots,297,Singapore,FALSE,Caching,C++,Postgres\r\nJazmine Holt,Developer Platform,139,San Francisco,FALSE,Typescript,Rust,AI\r\nNiko Molina,CDN,229,London,FALSE,HTML,Performance,GoLang\r\nAlexandria Booth,Accounting,156,New York,FALSE,Distributed Systems,C++,AI\r\nChaim Cisneros,Bots,80,Austin,FALSE,Distributed Systems,Rust,GoLang\r\nJanelle Hall,Developer Platform,158,Singapore,FALSE,HTML,Performance,Postgres\r\nThomas Nixon,CDN,201,San Francisco,FALSE,Caching,C++,AI\r\nDeborah Taylor,Accounting,186,London,FALSE,Typescript,Rust,GoLang\r\nJackson Parsons,Bots,150,New York,FALSE,HTML,Performance,AI\r\nMaia Blackburn,Developer Platform,294,Austin,FALSE,Distributed Systems,C++,GoLang\r\nZahir Hartman,CDN,106,Singapore,FALSE,HTML,Rust,Postgres\r\nKennedi Palacios,Accounting,300,San Francisco,FALSE,Caching,Performance,AI\r\nThaddeus Dillon,Bots,172,London,FALSE,Typescript,C++,GoLang\r\nLaurel Moore,Developer Platform,194,New York,FALSE,HTML,Rust,AI\r\nLevi Rivers,CDN,141,Austin,FALSE,Distributed Systems,Performance,GoLang\r\nKiana Ray,Accounting,104,Austin,FALSE,Distributed Systems,C++,Postgres\r\nArlo Person,Bots,203,Singapore,FALSE,HTML,Rust,AI\r\nDylan Evans,Developer Platform,90,San Francisco,FALSE,Caching,Performance,GoLang\r\nElias Quintero,CDN,215,London,FALSE,Typescript,C++,AI\r\nKeyla Hurst,Accounting,137,New York,FALSE,HTML,Rust,GoLang\r\nNeil Carroll,Bots,188,Austin,FALSE,Distributed Systems,Performance,Postgres\r\nZara Bradford,Developer Platform,163,Austin,FALSE,HTML,C++,AI\r\nAnder Quintero,CDN,226,Singapore,FALSE,Caching,Rust,GoLang\r\nKeyla Bravo,Accounting,242,San Francisco,FALSE,Typescript,Performance,AI\r\nGenesis Felix,Bots,187,London,FALSE,HTML,C++,GoLang\r\nPaisleigh Sherman,Developer Platform,118,New York,FALSE,Distributed Systems,Rust,Postgres\r\nAdan Sanford,CDN,280,Austin,FALSE,Distributed Systems,Performance,AI\r\nEmerald Macdonald,Accounting,228,Austin,FALSE,HTML,C++,GoLang\r\nHugh Bowman,Bots,139,Singapore,FALSE,Caching,Rust,AI\r\nFiona Robinson,Developer Platform,300,San Francisco,FALSE,Typescript,Performance,GoLang\r\nMatthew Christensen,CDN,204,London,FALSE,HTML,C++,Postgres\r\nCarmen McLaughlin,Accounting,221,New York,FALSE,Distributed Systems,Rust,AI\r\nIbrahim Gould,Bots,262,Austin,FALSE,HTML,Performance,GoLang\r\nVioleta Cortes,Developer Platform,98,Austin,FALSE,Caching,C++,AI\r\nBanks Fitzpatrick,CDN,250,Singapore,FALSE,Typescript,Rust,GoLang\r\nAnnabella Velasquez,Accounting,172,San Francisco,FALSE,HTML,Performance,Postgres\r\nSullivan Nunez,Bots,165,London,FALSE,Distributed Systems,C++,AI\r\nMya Hardy,Developer Platform,127,New York,FALSE,Distributed Systems,Rust,GoLang\r\nJayceon Murillo,CDN,128,Austin,FALSE,HTML,Performance,AI\r\nMikaela Hampton,Accounting,89,Austin,FALSE,Caching,C++,GoLang\r\nHank Sandoval,Bots,165,Singapore,FALSE,Typescript,Rust,Postgres\r\nElsie McCarthy,Developer Platform,128,San Francisco,FALSE,HTML,Rust,AI\r\nDevin Weber,CDN,285,London,FALSE,Distributed Systems,Performance,GoLang`;\r\n\r\n// const express = require('express');\r\n// const cors = require('cors');\r\n// const app = express();\r\n\r\n// app.use(cors({\r\n//   origin: 'http://localhost:3000' // Replace with the URL of your React app\r\n// }));\r\n\r\naddEventListener('fetch', event => {\r\n  event.respondWith(handleRequest(event.request))\r\n})\r\n\r\nfunction getOrganizationDataFromCSV(csvData) {\r\n  const rows = csvData.split('\\n');\r\n  let departments = {};\r\n\r\n  for (let i = 1; i < rows.length; i++) {\r\n    const row = rows[i].split(',');\r\n    const [name, department, salary, office, isManager, ...skills] = row;\r\n\r\n    if (!departments[department]) { // Create department if it doesn't exist\r\n      departments[department] = { name: department, managerName: '', employees: [] };\r\n    }\r\n\r\n    if (isManager === 'TRUE') { // Set manager name for the department\r\n      departments[department].managerName = name;\r\n    }\r\n\r\n    departments[department].employees.push({ // Add employee to the respective department\r\n      name,\r\n      salary: Number(salary),\r\n      office,\r\n      isManager: isManager === 'TRUE',\r\n      skills\r\n    });\r\n  }\r\n\r\n  return organization = { organization: { departments: Object.values(departments) } };\r\n}\r\n\r\nfunction escapeRegExp(string) {\r\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n}\r\n\r\nfunction filterEmployees(organization, reqBodySearchCriteria) {\r\n  const {departments} = organization; \r\n\r\n  const filterEmployees = departments.flatMap((department) => \r\n    department.employees.filter((employee) => {\r\n      // Regular expression checks for provided search criteria\r\n      const nameRegex = reqBodySearchCriteria.name ? new RegExp(reqBodySearchCriteria.name, 'i') : null;\r\n      const departmentRegex = reqBodySearchCriteria.department ? new RegExp(reqBodySearchCriteria.department, 'i') : null;\r\n      const minSalary = reqBodySearchCriteria.minSalary || 0;\r\n      const maxSalary = reqBodySearchCriteria.maxSalary !== undefined ? reqBodySearchCriteria.maxSalary : Number.MAX_SAFE_INTEGER;\r\n      const officeRegex = reqBodySearchCriteria.office ? new RegExp(reqBodySearchCriteria.office, 'i') : null;\r\n\r\n      const skillRegexStr = reqBodySearchCriteria.skill ? escapeRegExp(reqBodySearchCriteria.skill) : null;\r\n      const skillRegex = skillRegexStr ? new RegExp(skillRegexStr, 'i') : null;\r\n      return (\r\n        (!nameRegex || nameRegex.test(employee.name)) &&\r\n        (!departmentRegex || departmentRegex.test(department.name)) &&\r\n        employee.salary >= minSalary &&\r\n        employee.salary <= maxSalary &&\r\n        (!officeRegex || officeRegex.test(employee.office)) &&\r\n        (!skillRegex || employee.skills.some((skill) => skillRegex.test(skill)))\r\n      );\r\n    }), []\r\n  );\r\n  return filterEmployees;\r\n}\r\n\r\n/**\r\n * Respond with hello worker text\r\n * @param {Request} request\r\n */\r\nasync function handleRequest(request) {\r\n  const url = new URL(request.url);\r\n\r\n  if (url.pathname == \"/organization-chart\" && request.method == \"GET\") {\r\n    const organizationData = JSON.stringify(await getOrganizationDataFromCSV(testCSVData));\r\n    if (organizationData === null) {\r\n      return new Response(\"Organization data not found\", { status: 404 });\r\n    }\r\n    return new Response(organizationData, {\r\n      headers: { 'content-type': 'application/json' },\r\n    });\r\n  }\r\n\r\n  if (url.pathname == \"/organization-chart\" && request.method == \"POST\") {\r\n    const requestBody = await request.json();\r\n    var csvData = requestBody.organizationData;\r\n    var organizationJson = JSON.stringify(getOrganizationDataFromCSV(csvData));\r\n    // await CloudflareOrgDashboardKV.put(\"organizationData\", \"test\"); // Store in KV\r\n    return new Response(organizationJson, {\r\n      headers: { 'content-type': 'application/json' }\r\n    });\r\n  }\r\n\r\n  if (url.pathname == \"/employee\" && request.method == \"POST\") {\r\n    const requestBodySearchCritera = await request.json(); // requestBody defines search criteria\r\n    const organizationJson = getOrganizationDataFromCSV(testCSVData);\r\n    var matchingEmployees = [];\r\n    if (organizationJson.organization){\r\n      matchingEmployees = filterEmployees(organizationJson.organization, requestBodySearchCritera);\r\n    }\r\n    return new Response(JSON.stringify({ employees: matchingEmployees }), {\r\n      headers: { 'content-type': 'application/json' }\r\n    });\r\n  }\r\n\r\n  if (url.pathname == \"/me\" && request.method == \"GET\"){\r\n    const me = {\r\n      \"name\": \"John Li\",\r\n      \"homepage\": \"https://cloudflare-org-dashboard-project-worker.john-li25.workers.dev/\", \r\n      \"githubURL\": \"https://github.com/johnli25\", \r\n      \"interestingFact\": \"I do club swim, soccer, and triathalon at the University of Illinois at Urbana-Champaign!\", \r\n      \"skills\": [\"C++\", \"C\", \"Python\", \"Java\", \"x86 Assembly\", \"SQL\", \"Go\", \"JavaScript\", \"C#\", \"SystemVerilog\", \"TypeScript\", \"Neo4j/Cypher\", \"Bash/Shell\", \"Linux\", \"Git\", \"Agile/Scrum\", \"Jenkins\", \"MongoDB\", \"Kubernetes\", \"Docker\", \"Qemu\", \"Node.js\", \"Perforce\", \"React\", \"FPGA\", \"AWS\", \"PyTorch\", \"Google Cloud Platform (GCP)\", \"REST API\"]\r\n    };\r\n\r\n    return new Response(JSON.stringify(me), {\r\n      headers: { 'content-type': 'application/json' },\r\n    });\r\n  }\r\n\r\n  return new Response('Hello worker!', {\r\n    headers: { 'content-type': 'text/plain' },\r\n  })\r\n}\r\n"],
  "mappings": "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",
  "names": ["ctx", "organization", "filterEmployees", "organizationJson"]
}
